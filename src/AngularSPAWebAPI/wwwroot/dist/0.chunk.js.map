{"version":3,"sources":["webpack:///./app/account/account.module.ts","webpack:///./app/account/signin/signin.component.ts","webpack:///./app/account/signin.ts","webpack:///./app/account/signup/signup.component.ts","webpack:///./app/account/account-routing.module.ts","webpack:///./app/account/signin/signin.component.html","webpack:///./app/account/signup/signup.component.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAyC;AAEuB;AACT;AAEK;AACA;AAY5D;IAAA;IAA6B,CAAC;IAAjB,aAAa;QAVzB,uDAAQ,CAAC;YACN,OAAO,EAAE;gBACL,qFAAoB;gBACpB,2EAAY;aACf;YACD,YAAY,EAAE;gBACV,iFAAe;gBACf,iFAAe;aAClB;SACJ,CAAC;OACW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBgB;AACD;AAEqC;AAC3C;AAKnC;IAAqC,mCAAM;IAEvC,yBACc,MAAc,EACd,qBAA4C;QAF1D,YAGI,kBAAM,MAAM,EAAE,qBAAqB,CAAC,SAKvC;QAPa,YAAM,GAAN,MAAM,CAAQ;QACd,2BAAqB,GAArB,qBAAqB,CAAuB;QAItD,KAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,iBAAiB,CAAC;QACxC,KAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;;IACrC,CAAC;IAVQ,eAAe;QAH3B,wDAAS,CAAC;YACP,QAAQ,EAAE,mBAAO,CAAC,GAAyB,CAAC;SAC/C,CAAC;yCAIwB,+DAAM;YACS,+FAAqB;OAJjD,eAAe,CAY3B;IAAD,sBAAC;CAAA,CAZoC,uDAAM,GAY1C;AAZ2B;;;;;;;;;ACF5B;AAAA;IAMI,gBACc,MAAc,EACd,qBAA4C;QAD5C,WAAM,GAAN,MAAM,CAAQ;QACd,0BAAqB,GAArB,qBAAqB,CAAuB;QAN1D,UAAK,GAAQ,EAAE,CAAC;QAEhB,kBAAa,GAAU,EAAE,CAAC;IAIoC,CAAC;IAE/D,uBAAM,GAAN;QAAA,iBAwCC;QAvCG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;aACtE,SAAS,CACV;YAEI,KAAI,CAAC,qBAAqB,CAAC,eAAe,EAAE,CAAC;YAG7C,KAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC,SAAS,CAC9C,UAAC,QAAa;gBACV,KAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBAIhD,IAAM,QAAQ,GAAW,KAAI,CAAC,qBAAqB,CAAC,WAAW;sBACzD,KAAI,CAAC,qBAAqB,CAAC,WAAW;sBACtC,OAAO,CAAC;gBAEd,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;QACX,CAAC,EACD,UAAC,KAAU;YAEP,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;gBACnB,IAAM,IAAI,GAAQ,KAAK,CAAC,IAAI,EAAE,CAAC;gBAE/B,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;oBACjB,KAAK,eAAe;wBAChB,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,4BAA4B,EAAE,CAAC,CAAC;wBACvE,KAAK,CAAC;oBACV;wBACI,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,8BAA8B,EAAE,CAAC,CAAC;gBACjF,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAM,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,OAAO;oBAC1C,KAAK,CAAC,MAAM,GAAM,KAAK,CAAC,MAAM,WAAM,KAAK,CAAC,UAAY,GAAG,cAAc,CAAC;gBAC5E,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpB,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,0BAA0B,EAAE,CAAC,CAAC;YACzE,CAAC;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IAED,8BAAa,GAAb;QACI,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IAC5B,CAAC;IAEL,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DyC;AACD;AAEqC;AACZ;AAC/B;AAKnC;IAAqC,mCAAM;IAEvC,yBACc,MAAc,EACd,qBAA4C,EAC9C,eAAgC;QAH5C,YAII,kBAAM,MAAM,EAAE,qBAAqB,CAAC,SACvC;QAJa,YAAM,GAAN,MAAM,CAAQ;QACd,2BAAqB,GAArB,qBAAqB,CAAuB;QAC9C,qBAAe,GAAf,eAAe,CAAiB;;IAE5C,CAAC;IAED,gCAAM,GAAN;QAAA,iBAkBC;QAjBG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;aAClC,SAAS,CACV,UAAC,GAAQ;YAEL,EAAE,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;gBAEhB,KAAI,CAAC,MAAM,EAAE,CAAC;YAClB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC,MAAM,CAAC;YACpC,CAAC;QACL,CAAC,EACD,UAAC,KAAU;YACP,IAAM,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,OAAO;gBAC1C,KAAK,CAAC,MAAM,GAAM,KAAK,CAAC,MAAM,WAAM,KAAK,CAAC,UAAY,GAAG,cAAc,CAAC;YAC5E,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,0BAA0B,EAAE,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;IACX,CAAC;IA3BQ,eAAe;QAH3B,wDAAS,CAAC;YACP,QAAQ,EAAE,mBAAO,CAAC,GAAyB,CAAC;SAC/C,CAAC;yCAIwB,+DAAM;YACS,+FAAqB;YAC7B,mFAAe;OALnC,eAAe,CA6B3B;IAAD,sBAAC;CAAA,CA7BoC,uDAAM,GA6B1C;AA7B2B;;;;;;;;;;;;;;;;;;;;ACVa;AACc;AAEK;AACA;AAE5D,IAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,iFAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,iFAAe,EAAE;CACjD,CAAC;AAMF;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QAJhC,uDAAQ,CAAC;YACN,OAAO,EAAE,CAAC,qEAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,qEAAY,CAAC;SAC1B,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ;;;;;;;;ACfjC,08CAA08C,4BAA4B,gY;;;;;;;ACAt+C,wrFAAwrF,4BAA4B,gY","file":"dist/0.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\r\n\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        AccountRoutingModule,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        SigninComponent,\r\n        SignupComponent\r\n    ]\r\n})\r\nexport class AccountModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./node_modules/angular2-template-loader!./node_modules/source-map-loader!./app/account/account.module.ts","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { Signin } from '../signin';\r\n\r\n@Component({\r\n    template: require('./signin.component.html')\r\n})\r\nexport class SigninComponent extends Signin {\r\n\r\n    constructor(\r\n        protected router: Router,\r\n        protected authenticationService: AuthenticationService) {\r\n        super(router, authenticationService);\r\n\r\n        // Preloads data for live example.\r\n        this.model.username = \"admin@gmail.com\";\r\n        this.model.password = \"Admin01*\";\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./node_modules/angular2-template-loader!./node_modules/source-map-loader!./app/account/signin/signin.component.ts","import { Router } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n/**\r\n * Provides signin method to signin & signup components.\r\n */\r\nexport class Signin {\r\n\r\n    model: any = {};\r\n\r\n    errorMessages: any[] = [];\r\n\r\n    constructor(\r\n        protected router: Router,\r\n        protected authenticationService: AuthenticationService) { }\r\n\r\n    signin(): void {\r\n        this.authenticationService.signin(this.model.username, this.model.password)\r\n            .subscribe(\r\n            () => {\r\n                // Strategy for refresh token through a scheduler.\r\n                this.authenticationService.scheduleRefresh();\r\n\r\n                // Gets user's data.\r\n                this.authenticationService.getUserInfo().subscribe(\r\n                    (userInfo: any) => {\r\n                        this.authenticationService.changeUser(userInfo);\r\n\r\n                        // Gets the redirect URL from authentication service.\r\n                        // If no redirect has been set, uses the default.\r\n                        const redirect: string = this.authenticationService.redirectUrl\r\n                            ? this.authenticationService.redirectUrl\r\n                            : '/home';\r\n                        // Redirects the user.\r\n                        this.router.navigate([redirect]);\r\n                    });\r\n            },\r\n            (error: any) => {\r\n                // Checks for error in response (error from the Token endpoint).\r\n                if (error.body != \"\") {\r\n                    const body: any = error.json();\r\n\r\n                    switch (body.error) {\r\n                        case \"invalid_grant\":\r\n                            this.errorMessages.push({ description: \"Invalid email or password.\" });\r\n                            break;\r\n                        default:\r\n                            this.errorMessages.push({ description: \"Unexpected error. Try again.\" });\r\n                    }\r\n                } else {\r\n                    const errMsg = (error.message) ? error.message :\r\n                        error.status ? `${error.status} - ${error.statusText}` : \"Server error\";\r\n                    console.log(errMsg);\r\n                    this.errorMessages.push({ description: \"Server error. Try later.\" });\r\n                }\r\n            });\r\n    }\r\n\r\n    clearMessages(): void {\r\n        this.errorMessages = [];\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./node_modules/angular2-template-loader!./node_modules/source-map-loader!./app/account/signin.ts","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { IdentityService } from '../../services/identity.service';\r\nimport { Signin } from '../signin';\r\n\r\n@Component({\r\n    template: require('./signup.component.html')\r\n})\r\nexport class SignupComponent extends Signin {\r\n\r\n    constructor(\r\n        protected router: Router,\r\n        protected authenticationService: AuthenticationService,\r\n        private identityService: IdentityService) {\r\n        super(router, authenticationService);\r\n    }\r\n\r\n    signup(): void {\r\n        this.identityService.create(this.model)\r\n            .subscribe(\r\n            (res: any) => {\r\n                // IdentityResult.\r\n                if (res.succeeded) {\r\n                    // Signs in the user.\r\n                    this.signin();\r\n                } else {\r\n                    this.errorMessages = res.errors;\r\n                }\r\n            },\r\n            (error: any) => {\r\n                const errMsg = (error.message) ? error.message :\r\n                    error.status ? `${error.status} - ${error.statusText}` : \"Server error\";\r\n                console.log(errMsg);\r\n                this.errorMessages.push({ description: \"Server error. Try later.\" });\r\n            });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./node_modules/angular2-template-loader!./node_modules/source-map-loader!./app/account/signup/signup.component.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\n\r\nconst routes: Routes = [\r\n    { path: 'signin', component: SigninComponent },\r\n    { path: 'signup', component: SignupComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./node_modules/angular2-template-loader!./node_modules/source-map-loader!./app/account/account-routing.module.ts","module.exports = \"<div class=\\\"account-card-container\\\">\\r\\n\\r\\n    <md-card>\\r\\n        <md-toolbar color=\\\"primary\\\">Sign in</md-toolbar>\\r\\n        <md-card-content>\\r\\n            <form name=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.form.valid && signin()\\\" novalidate>\\r\\n                <div>\\r\\n                    <br />\\r\\n                    <br />\\r\\n                    <md-input-container class=\\\"full-width\\\">\\r\\n                        <input type=\\\"text\\\" mdInput [(ngModel)]=\\\"model.username\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" placeholder=\\\"email\\\" (keyup)=\\\"clearMessages()\\\" required>\\r\\n                        <md-error>\\r\\n                            Required\\r\\n                        </md-error>\\r\\n                    </md-input-container>\\r\\n                    <br />\\r\\n                    <br />\\r\\n                    <md-input-container class=\\\"full-width\\\">\\r\\n                        <input type=\\\"password\\\" mdInput [(ngModel)]=\\\"model.password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" placeholder=\\\"password\\\" (keyup)=\\\"clearMessages()\\\" required>\\r\\n                        <md-error>\\r\\n                            Required\\r\\n                        </md-error>\\r\\n                    </md-input-container>\\r\\n                    <br />\\r\\n                    <div *ngIf=\\\"errorMessages.length > 0\\\" class=\\\"has-error\\\">\\r\\n                        <div *ngFor=\\\"let errorMessage of errorMessages\\\">\\r\\n                            <small>{{ errorMessage.description }}</small>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <br />\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button md-raised-button color=\\\"accent\\\" type=\\\"submit\\\" class=\\\"full-width\\\">Sign in</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </md-card-content>\\r\\n    </md-card>\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/account/signin/signin.component.html\n// module id = 157\n// module chunks = 0","module.exports = \"<div class=\\\"account-card-container\\\">\\r\\n\\r\\n    <md-card>\\r\\n        <md-toolbar color=\\\"primary\\\">Sign up</md-toolbar>\\r\\n        <md-card-content>\\r\\n            <form name=\\\"form\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.form.valid && signup()\\\" novalidate>\\r\\n                <div>\\r\\n                    <br />\\r\\n                    <br />\\r\\n                    <md-input-container class=\\\"full-width\\\">\\r\\n                        <input type=\\\"text\\\" mdInput [(ngModel)]=\\\"model.givenName\\\" name=\\\"givenName\\\" #givenName=\\\"ngModel\\\" placeholder=\\\"first name\\\" (keyup)=\\\"clearMessages()\\\" required>\\r\\n                        <md-error>\\r\\n                            Required\\r\\n                        </md-error>\\r\\n                    </md-input-container>\\r\\n                    <br />\\r\\n                    <br />\\r\\n                    <md-input-container class=\\\"full-width\\\">\\r\\n                        <input type=\\\"text\\\" mdInput [(ngModel)]=\\\"model.familyName\\\" name=\\\"familyName\\\" #familyName=\\\"ngModel\\\" placeholder=\\\"last name\\\" (keyup)=\\\"clearMessages()\\\" required>\\r\\n                        <md-error>\\r\\n                            Required\\r\\n                        </md-error>\\r\\n                    </md-input-container>\\r\\n                    <br />\\r\\n                    <br />\\r\\n                    <md-input-container class=\\\"full-width\\\">\\r\\n                        <input type=\\\"text\\\" mdInput [(ngModel)]=\\\"model.username\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" placeholder=\\\"email\\\" (keyup)=\\\"clearMessages()\\\"\\r\\n                               pattern=\\\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\\\" required>\\r\\n                        <md-error *ngIf=\\\"username.hasError('required')\\\">\\r\\n                            Required\\r\\n                        </md-error>\\r\\n                        <md-error *ngIf=\\\"username.hasError('pattern')\\\">\\r\\n                            Invalid format\\r\\n                        </md-error>\\r\\n                    </md-input-container>\\r\\n                    <br />\\r\\n                    <br />\\r\\n                    <md-input-container class=\\\"full-width\\\">\\r\\n                        <input type=\\\"password\\\" mdInput [(ngModel)]=\\\"model.password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" placeholder=\\\"password\\\" (keyup)=\\\"clearMessages()\\\" required>\\r\\n                        <md-error>\\r\\n                            Required\\r\\n                        </md-error>\\r\\n                    </md-input-container>\\r\\n                    <br />\\r\\n                    <div *ngIf=\\\"errorMessages.length > 0\\\" class=\\\"has-error\\\">\\r\\n                        <div *ngFor=\\\"let errorMessage of errorMessages\\\">\\r\\n                            <small>{{ errorMessage.description }}</small>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <br />\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button md-raised-button color=\\\"accent\\\" type=\\\"submit\\\" class=\\\"full-width\\\">Sign up</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </md-card-content>\\r\\n    </md-card>\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/account/signup/signup.component.html\n// module id = 158\n// module chunks = 0"],"sourceRoot":""}